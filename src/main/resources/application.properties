spring.my.message=i love you
#spring.web.resources.static-locations ?????classpath:/META-INF/resources/
# ,classpath:/resources/,classpath:/static/,classpath:/public/
# ????????
spring.web.resources.static-locations=classpath:static/image/
# ???? undertow ?????? false
server.undertow.accesslog.enabled=false
# ??????????
server.undertow.accesslog.dir=logs
# ???????? I/0 ??????? 2 ?? CPU ???
server.undertow.io-threads=
# ????????????? I/O ????? 8 ?
server.undertow.worker-threads=
# ?? HTTP POST ??????????????
server.undertow.max-http-post-size=0

# swagger\u76F8\u5173\u914D\u7F6E
# \u6807\u9898
swagger.title=spring-boot-starter-swagger
# \u63CF\u8FF0
swagger.description=Starter for swagger 2.x
#\u7248\u672C
swagger.version=1.4.0.RELEASE
# \u8BB8\u53EF\u8BC1
swagger.license=Apache License, Version 2.0
# \u8BB8\u53EF\u8BC1URL
swagger.licenseUrl=https://www.apache.org/licenses/LICENSE-2.0.html
#\u670D\u52A1\u6761\u6B3EURL
swagger.termsOfServiceUrl=
#\u7EF4\u62A4\u4EBA
swagger.contact.name=
#\u7EF4\u62A4\u4EBAURL
swagger.contact.url=
#\u7EF4\u62A4\u4EBA\u90AE\u7BB1
swagger.contact.email=
#swagger\u626B\u63CF\u7684\u57FA\u7840\u5305\uFF0C\u9ED8\u8BA4\uFF1A\u5168\u626B\u63CF
swagger.base-package=com.example
#\u9700\u8981\u5904\u7406\u7684\u57FA\u7840URL\u89C4\u5219\uFF0C\u9ED8\u8BA4\uFF1A/**
swagger.base-path=/**

#thymeleaf\u76F8\u5173\u914D\u7F6E
# Enable template caching.
spring.thymeleaf.cache=false 
# Check that the templates location exists.
spring.thymeleaf.check-template-location=true 
# Content-Type value.
spring.thymeleaf.content-type=text/html 
# Enable MVC Thymeleaf view resolution.
spring.thymeleaf.enabled=true 
# Template encoding.
spring.thymeleaf.encoding=utf-8
# Comma-separated list of view names that should be excluded from resolution.
#spring.thymeleaf.excluded-view-names=
# Template mode to be applied to templates. See also StandardTemplateModeHandlers.
#spring.thymeleaf.mode=HTML5
# Prefix that gets prepended to view names when building a URL.
spring.thymeleaf.prefix=classpath:/templates/
# Suffix that gets appended to view names when building a URL.
spring.thymeleaf.suffix=.html
#spring.thymeleaf.template-resolver-order= # Order of the template resolver in the chain.
#spring.thymeleaf.view-names= # Comma-separated list of view names that can be resolved.

spring.datasource.url=jdbc:mysql://172.24.1.120:3306/hnh_test1
spring.datasource.username=root
spring.datasource.password=Ankki_mySQL123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.properties.hibernate.hbm2ddl.auto\u662Fhibernate\u7684\u914D\u7F6E\u5C5E\u6027\uFF0C\u5176\u4E3B\u8981\u4F5C\u7528\u662F\uFF1A\u81EA\u52A8\u521B\u5EFA\u3001\u66F4\u65B0\u3001\u9A8C\u8BC1\u6570\u636E\u5E93\u8868\u7ED3\u6784
#spring.jpa.properties.hibernate.hbm2ddl.auto=create-drop
spring.jpa.properties.hibernate.hbm2ddl.auto=create-drop
#\u5F00\u542F\u5BF9sql\u8BED\u53E5\u7684\u6253\u5370
spring.jpa.show-sql=true
#\u6307\u5B9A\u7F13\u5B58\u7684\u7C7B\u578B
#spring.cache.type=redis
#server.port=8081
spring.kafka.bootstrap-servers=172.24.1.120:9092
spring.kafka.consumer.group-id=group_id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-deserializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-deserializer=org.apache.kafka.common.serialization.StringSerializer
